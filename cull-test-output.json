{"numFailedTestSuites":1,"numFailedTests":1,"numPassedTestSuites":0,"numPassedTests":27,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":28,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1742256745760,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Node Position Calculation","Direction.getStrictAnchorName"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation Direction.getStrictAnchorName should convert abbreviations to canonical forms","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should convert abbreviations to canonical forms"},{"ancestorTitles":["Node Position Calculation","Direction.getStrictAnchorName"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation Direction.getStrictAnchorName should recognize canonical forms","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should recognize canonical forms"},{"ancestorTitles":["Node Position Calculation","Direction.getStrictAnchorName"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation Direction.getStrictAnchorName should be case-insensitive","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should be case-insensitive"},{"ancestorTitles":["Node Position Calculation","Direction.getStrictAnchorName"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation Direction.getStrictAnchorName should return null for unrecognized anchors","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return null for unrecognized anchors"},{"ancestorTitles":["Node Position Calculation","getAnchorPosition"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation getAnchorPosition should calculate center position","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate center position"},{"ancestorTitles":["Node Position Calculation","getAnchorPosition"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation getAnchorPosition should calculate north position","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate north position"},{"ancestorTitles":["Node Position Calculation","getAnchorPosition"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation getAnchorPosition should calculate south position","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate south position"},{"ancestorTitles":["Node Position Calculation","getAnchorPosition"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation getAnchorPosition should calculate east position","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate east position"},{"ancestorTitles":["Node Position Calculation","getAnchorPosition"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation getAnchorPosition should calculate west position","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate west position"},{"ancestorTitles":["Node Position Calculation","getAnchorPosition"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation getAnchorPosition should calculate northeast position","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate northeast position"},{"ancestorTitles":["Node Position Calculation","getAnchorPosition"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation getAnchorPosition should calculate northwest position","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate northwest position"},{"ancestorTitles":["Node Position Calculation","getAnchorPosition"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation getAnchorPosition should calculate southeast position","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate southeast position"},{"ancestorTitles":["Node Position Calculation","getAnchorPosition"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation getAnchorPosition should calculate southwest position","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate southwest position"},{"ancestorTitles":["Node Position Calculation","getAnchorPosition"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation getAnchorPosition should return null for invalid anchor","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return null for invalid anchor"},{"ancestorTitles":["Node Position Calculation","getAnchorPosition"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation getAnchorPosition should handle undefined node","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle undefined node"},{"ancestorTitles":["Node Position Calculation","getAnchorPosition"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation getAnchorPosition should handle undefined anchor","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle undefined anchor"},{"ancestorTitles":["Node Position Calculation","calculatePositionAndScale without scaling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation calculatePositionAndScale without scaling should return calculated: false when no positioning is defined","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return calculated: false when no positioning is defined"},{"ancestorTitles":["Node Position Calculation","calculatePositionAndScale without scaling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation calculatePositionAndScale without scaling should return both scaled and unscaled x,y if provided directly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return both scaled and unscaled x,y if provided directly"},{"ancestorTitles":["Node Position Calculation","calculatePositionAndScale without scaling"],"duration":5,"failureDetails":[{"matcherResult":{"actual":{"calculated":true,"success":true,"anchor":"north","nodeRef":"testNode","x":100,"y":115,"xUnscaled":100,"yUnscaled":115,"positionAnchored":"testNode.north","positionCoordinates":"(100,115)","positionCoordinatesUnscaled":"(100,115)","isAdjusted":false,"adjustments":null},"expected":{"calculated":true,"success":true,"anchor":"north","nodeRef":"testNode","x":100,"y":115,"xUnscaled":100,"yUnscaled":115,"positionAnchored":"testNode.north","positionCoordinates":"(100,115)","positionCoordinatesUnscaled":"(100,115)","isAdjusted":false},"message":"expect(received).toEqual(expected) // deep equality\n\n- Expected  - 0\n+ Received  + 1\n\n@@ -1,6 +1,7 @@\n  Object {\n+   \"adjustments\": null,\n    \"anchor\": \"north\",\n    \"calculated\": true,\n    \"isAdjusted\": false,\n    \"nodeRef\": \"testNode\",\n    \"positionAnchored\": \"testNode.north\",","name":"toEqual","pass":false}}],"failureMessages":["Error: expect(received).toEqual(expected) // deep equality\n\n- Expected  - 0\n+ Received  + 1\n\n@@ -1,6 +1,7 @@\n  Object {\n+   \"adjustments\": null,\n    \"anchor\": \"north\",\n    \"calculated\": true,\n    \"isAdjusted\": false,\n    \"nodeRef\": \"testNode\",\n    \"positionAnchored\": \"testNode.north\",\n    at Object.toEqual (C:\\Users\\mathew\\source\\repos\\boxesandarrows\\tests\\unit\\io\\node-position.test.js:160:22)\n    at Promise.then.completed (C:\\Users\\mathew\\source\\repos\\boxesandarrows\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (C:\\Users\\mathew\\source\\repos\\boxesandarrows\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (C:\\Users\\mathew\\source\\repos\\boxesandarrows\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (C:\\Users\\mathew\\source\\repos\\boxesandarrows\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (C:\\Users\\mathew\\source\\repos\\boxesandarrows\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (C:\\Users\\mathew\\source\\repos\\boxesandarrows\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (C:\\Users\\mathew\\source\\repos\\boxesandarrows\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (C:\\Users\\mathew\\source\\repos\\boxesandarrows\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (C:\\Users\\mathew\\source\\repos\\boxesandarrows\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (C:\\Users\\mathew\\source\\repos\\boxesandarrows\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (C:\\Users\\mathew\\source\\repos\\boxesandarrows\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (C:\\Users\\mathew\\source\\repos\\boxesandarrows\\node_modules\\jest-runner\\build\\runTest.js:444:34)"],"fullName":"Node Position Calculation calculatePositionAndScale without scaling should calculate position based on anchor of current node","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"should calculate position based on anchor of current node"},{"ancestorTitles":["Node Position Calculation","calculatePositionAndScale without scaling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation calculatePositionAndScale without scaling should calculate position based on anchor of other node","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate position based on anchor of other node"},{"ancestorTitles":["Node Position Calculation","calculatePositionAndScale without scaling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation calculatePositionAndScale without scaling should apply x,y adjustments to calculated position","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should apply x,y adjustments to calculated position"},{"ancestorTitles":["Node Position Calculation","calculatePositionAndScale without scaling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation calculatePositionAndScale without scaling should return position: null if anchor node is not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return position: null if anchor node is not found"},{"ancestorTitles":["Node Position Calculation","calculatePositionAndScale without scaling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation calculatePositionAndScale without scaling should return anchored position for non-canonical anchors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return anchored position for non-canonical anchors"},{"ancestorTitles":["Node Position Calculation","calculatePositionAndScale without scaling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation calculatePositionAndScale without scaling should return anchored position with nodeRef for non-canonical anchors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return anchored position with nodeRef for non-canonical anchors"},{"ancestorTitles":["Node Position Calculation","calculatePositionAndScale without scaling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation calculatePositionAndScale without scaling should return position: null if no anchor specified but other positioning is","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return position: null if no anchor specified but other positioning is"},{"ancestorTitles":["Node Position Calculation","calculatePositionAndScale with scaling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation calculatePositionAndScale with scaling should return scaled and unscaled x,y if provided directly with scaling","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return scaled and unscaled x,y if provided directly with scaling"},{"ancestorTitles":["Node Position Calculation","calculatePositionAndScale with scaling"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation calculatePositionAndScale with scaling should calculate scaled position and convert back to unscaled","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should calculate scaled position and convert back to unscaled"},{"ancestorTitles":["Node Position Calculation","calculatePositionAndScale with scaling"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Node Position Calculation calculatePositionAndScale with scaling should apply scaled adjustments with scaling","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should apply scaled adjustments with scaling"}],"endTime":1742256746454,"message":"  ● Node Position Calculation › calculatePositionAndScale without scaling › should calculate position based on anchor of current node\n\n    expect(received).toEqual(expected) // deep equality\n\n    - Expected  - 0\n    + Received  + 1\n\n    @@ -1,6 +1,7 @@\n      Object {\n    +   \"adjustments\": null,\n        \"anchor\": \"north\",\n        \"calculated\": true,\n        \"isAdjusted\": false,\n        \"nodeRef\": \"testNode\",\n        \"positionAnchored\": \"testNode.north\",\n\n    \u001b[0m \u001b[90m 158 |\u001b[39m         testNode\u001b[33m,\u001b[39m allNodes\u001b[33m,\u001b[39m undefined\u001b[33m,\u001b[39m undefined\u001b[33m,\u001b[39m \u001b[32m'north'\u001b[39m\u001b[33m,\u001b[39m undefined\u001b[33m,\u001b[39m undefined\u001b[33m,\u001b[39m undefined\n     \u001b[90m 159 |\u001b[39m       )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 160 |\u001b[39m       expect(result)\u001b[33m.\u001b[39mtoEqual({ \n     \u001b[90m     |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 161 |\u001b[39m         calculated\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m \n     \u001b[90m 162 |\u001b[39m         success\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m \n     \u001b[90m 163 |\u001b[39m         anchor\u001b[33m:\u001b[39m \u001b[32m'north'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at Object.toEqual (tests/unit/io/node-position.test.js:160:22)\n","name":"C:\\Users\\mathew\\source\\repos\\boxesandarrows\\tests\\unit\\io\\node-position.test.js","startTime":1742256745871,"status":"failed","summary":""}],"wasInterrupted":false}
